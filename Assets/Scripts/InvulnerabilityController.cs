using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class InvulnerabilityController : MonoBehaviour {
	[SerializeField] float timeBetweenFlashes = 0.2f;
	MeshRenderer[] meshRenderers;
	float invulnerableDuration;

	Collider[] colliders;
    float startTime;

    void Start()
	{
		invulnerableDuration = GetComponent<PlayerHealth>().invulnerableTime;
		
		colliders = GetComponentsInChildren<Collider>();
		meshRenderers = GetComponentsInChildren<MeshRenderer>();
	}

	public void BeInvulnerable()
	{
		startTime = Time.time;

		//Flash
		StartCoroutine(FlashRoutine());

		//Disable all colliders so player can move through enemies
		// StartCoroutine(Decollide());
	}

	IEnumerator FlashRoutine()
	{
		while (Time.time - startTime < invulnerableDuration)
		{
			yield return new WaitForSeconds(timeBetweenFlashes);
			//Do the flash
			foreach (var mr in meshRenderers)
				mr.enabled = !mr.enabled;
		}
		//Invulnerablility over, make visible again
		foreach (var mr in meshRenderers)
			mr.enabled = true;
	}
	IEnumerator Decollide()
	{
		foreach (var c in colliders)
			c.enabled = false;
		while (Time.time- startTime < invulnerableDuration)
		{
			yield return null;
		}
		foreach (var c in colliders)
			c.enabled = true;
	}

}
